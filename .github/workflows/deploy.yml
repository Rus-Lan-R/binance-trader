name: Build & Deploy Bot

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "NODE_ENV=production" >> .env
          echo "BINANCE_API_KEY=${{ secrets.BINANCE_API_KEY }}" >> .env
          echo "BINANCE_API_SECRET=${{ secrets.BINANCE_API_SECRET }}" >> .env
          echo "TELEGRAM_BOT_KEY=${{ secrets.TELEGRAM_BOT_KEY }}" >> .env
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker image with build args
        run: |
          docker compose build

      - name: Push Docker image
        run: |
          docker compose push

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy on VPS
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/github_actions
          chmod 600 ~/.ssh/github_actions
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

          ssh -i ~/.ssh/github_actions -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/binance-trader-backend:latest

            if [ "$(docker ps -aq -f name=binance-trader-backend)" ]; then
              docker stop binance-trader-backend
              docker rm binance-trader-backend
            fi

            docker run -d \
              --name binance-trader-backend \
              ${{ secrets.DOCKER_HUB_USERNAME }}/binance-trader-backend:latest
          EOF
